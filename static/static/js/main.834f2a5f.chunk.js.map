{"version":3,"sources":["assets/conversation.png","components/MessageContainer.js","reducers/channelReducer.js","constants/channelActions.js","constants/usersActions.js","reducers/usersReducer.js","constants/channels.js","constants/messagesActions.js","reducers/messagesReducer.js","store.js","utils/socket.js","components/MessageBox.js","components/ChatContainer.js","constants/messageTypes.js","components/ParticipantsContainer.js","utils/messageProcessor.js","pages/HomePage.js","components/Routes.js","theme/theme.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","theme","messages","Object","defineProperty","overflowY","minHeight","maxHeight","minWidth","maxWidth","overflow","breakpoints","down","window","screen","availHeight","log","noButton","visibility","card","subtitle","fontWeight","color","borderRadius","padding","margin","props","classes","_useState","useState","_useState2","slicedToArray","userInput","setUserInput","endOfChat","React","createRef","sendMessage","sendHandler","scrollToBottom","current","scrollIntoView","behavior","block","inline","react_default","a","createElement","Fragment","index_es","id","className","container","alignContent","messageList","style","paddingTop","ref","wrap","justify","item","xs","justifty","label","autoFocus","value","onChange","event","target","onKeyDown","key","toLowerCase","preventDefault","InputProps","disableUnderline","variant","disabled","onClick","forceScroll","Send_default","paddingLeft","channelReducer","state","action","type","objectSpread","channel","payload","name","channelIndex","index","SET_USERS_LIST","SET_USER_ID","usersReducer","users","userId","CHANNEL_GLOBAL","CHANNEL_UK","CHANNEL_LIST","SET_MESSAGE_HISTORY","ADD_GLOBAL_MESSAGE","ADD_UK_MESSAGE","messagesReducer","messagesObj","global","toConsumableArray","uk","globalArr","push","ukArr","Store","createContext","initialState","server","mainReducer","stateObj","_arr","_i","length","newState","reducer","isEqual","StoreProvider","_useReducer","useReducer","_useReducer2","dispatch","Provider","children","Sockets","SocketsProvider","sockets","connect","channels","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","console","socket","WebSocket","location","host","onclose","dir","setTimeout","socketInfo","err","return","myMessage","backgroundColor","notMyMessage","author","authorName","align","flexShrink","messageContent","root","flexGrow","content","spacing","unit","toolbar","mixins","marginTop","border","noTop","display","footerCard","rightIcon","marginRight","_useContext","useContext","setIndex","useEffect","forceScrollToBottom","listEnd","document","getElementById","scrollTop","scrollHeight","classNames","position","indicatorColor","textColor","components_MessageContainer","userMessagesOnly","messageArray","filter","x","concat","reverse","map","msg","components_MessageBox","sender","message","input","currSocket","find","send","aria-label","href","drawer","up","width","fab","menuButton","drawerPaper","top","userBar","mobileOpen","mobile","setMobile","handleDrawerToggle","renderParticpants","user","transform","zIndex","People_default","smUp","implementation","open","onClose","paper","marginLeft","marginBottom","ArrowBack_default","participants","xsDown","MessageProcessor","_this","this","classCallCheck","dispatchAction","_ref","asyncToGenerator","regenerator_default","mark","_callee","_context","prev","stop","_x","_x2","apply","arguments","addMessageToStore","_ref2","_callee2","data","messageObj","_context2","recipient","timestamp","messageTime","_x3","setMessageHistoryToStore","_ref3","_callee3","globalMessages","ukMessages","_context3","messageHistory","forEach","_x4","setUserListToStore","_ref4","_callee4","_context4","_x5","HomePage","processor","_loop","onopen","onerror","onmessage","JSON","parse","execute","components_ParticipantsContainer","components_ChatContainer","Routes","react_router_dom","react_router","exact","path","component","rawTheme","createMuiTheme","palette","primary","light","main","dark","secondary","warning","error","xLight","red","success","green","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontFamilySecondary","useNextVariants","fontHeader","text","textTransform","background","default","placeholder","grey","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","body1","body2","topLayer","title","justifyContent","left","flex","leftLinkActive","common","white","right","rightLink","linkSecondary","AppBar_default","Toolbar_default","Link_default","underline","height","src","require","App","core_styles","store_StoreProvider","CssBaseline_default","components_Navbar","socket_SocketsProvider","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.834f2a5f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/conversation.c61c5837.png\";","import React, { useState } from 'react';\r\nimport { Grid, CardContent, withStyles, TextField, Divider, Button, Typography } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst styles = theme => ({\r\n  messages: {\r\n    overflowY: 'auto',\r\n    minHeight: '25em',\r\n    maxHeight: '25em',\r\n    minWidth: '720px',\r\n    maxWidth: '720px',\r\n    overflow: 'auto',\r\n    [theme.breakpoints.down('sm')]: {\r\n      minHeight: window.screen.availHeight * 0.5,\r\n      maxHeight: window.screen.availHeight * 0.5,\r\n      minWidth: 'inherit',\r\n      maxWidth: 'inherit'\r\n    }\r\n  },\r\n  log: {\r\n    overflowY: 'auto',\r\n    minHeight: 150,\r\n    maxHeight: 150,\r\n    overflow: 'auto'\r\n  },\r\n  noButton: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      visibility: 'hidden'\r\n\r\n    }\r\n  },\r\n  card: {\r\n    minWidth: '25em',\r\n    maxWidth: '25em',\r\n    [theme.breakpoints.down('sm')]: {\r\n      minWidth: 'inherit',\r\n      maxWidth: 'inherit'\r\n    }\r\n  },\r\n  subtitle: {\r\n    fontWeight: 'bold',\r\n    color: '#212e53de',\r\n    minHeight: '16px',\r\n    minWidth: '16px',\r\n    borderRadius: 8,\r\n    padding: '6px 6px 0px 6px',\r\n    margin: 0\r\n  }\r\n});\r\n\r\nconst MessageContainer = props => {\r\n  const { classes } = props;\r\n  const [userInput, setUserInput] = useState('');\r\n  const endOfChat = React.createRef();\r\n\r\n  const sendMessage = () => {\r\n    if (userInput !== '') {\r\n      props.sendHandler(userInput);\r\n    }\r\n    setUserInput('');\r\n    scrollToBottom();\r\n  };\r\n\r\n  const handleSendButton = () => {\r\n    sendMessage();\r\n    props.forceScroll();\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setUserInput(event.target.value);\r\n    scrollToBottom();\r\n  };\r\n\r\n  const handleEnter = event => {\r\n    if (event.key.toLowerCase() === 'enter' && userInput !== '') {\r\n      sendMessage();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    endOfChat.current.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CardContent id=\"endOfChat\" className={classes.messages}>\r\n        <Grid container alignContent={'flex-end'}>\r\n          {props.messageList(true)}\r\n        </Grid>\r\n        <div style={{ paddingTop: '80px' }} ref={endOfChat} />\r\n      </CardContent>\r\n      <Divider />\r\n\r\n      <Grid container wrap=\"nowrap\" justify=\"center\" style={{ margin: 12 }}>\r\n        <Grid item xs={10} container style={{ color: '#212e53' }} justifty=\"center\">\r\n          <TextField\r\n            label=\"Type a message...\"\r\n            autoFocus\r\n            className={classes.card}\r\n            value={userInput}\r\n            onChange={handleChange}\r\n            onKeyDown={handleEnter}\r\n            InputProps={{\r\n              disableUnderline: true\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2} container justify=\"center\">\r\n          <Button style={{ color: userInput === '' ? 'rgba(0,0,0,.2)' : '#212e53' }} variant=\"text\" disabled={userInput === ''} onClick={handleSendButton}>\r\n            Send\r\n            <SendIcon\r\n              style={{\r\n                paddingLeft: '6px',\r\n                color: userInput === '' ? 'rgba(0,0,0,.2)' : '#212e53'\r\n              }}\r\n              className={classes.noButton}\r\n            />\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider />\r\n      <CardContent className={classes.log}>\r\n        <Typography variant=\"body2\" className={classes.subtitle}>\r\n          {'Server Messages'}\r\n        </Typography>\r\n        <Typography style={{ color: '#ebaca2', padding: 6, margin: 2 }} variant=\"caption\">\r\n          Type '/help' for information\r\n        </Typography>\r\n        <Divider />\r\n        <Grid container>{props.messageList(false)}</Grid>\r\n      </CardContent>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(MessageContainer);\r\n","import { SET_CHANNEL } from \"../constants/channelActions\";\r\n\r\nexport const channelReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CHANNEL:\r\n      return { ...state, channel: action.payload.name, channelIndex: action.payload.index };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SET_CHANNEL = 'SET_CHANNEL';\r\n","export const SET_USERS_LIST = 'SET_USERS_LIST';\r\nexport const SET_USER_ID = 'SET_USER_ID';\r\n","import { SET_USERS_LIST, SET_USER_ID } from '../constants/usersActions';\r\n\r\nexport const usersReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_USERS_LIST:\r\n      return { ...state, users: action.payload };\r\n    case SET_USER_ID:\r\n      return { ...state, userId: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const CHANNEL_GLOBAL = 'Global';\r\nexport const CHANNEL_UK = 'UK';\r\nexport const CHANNEL_LIST = [CHANNEL_GLOBAL, CHANNEL_UK];","export const SET_MESSAGE_HISTORY = 'SET_MESSAGE_HISTORY';\r\nexport const ADD_GLOBAL_MESSAGE = 'ADD_GLOBAL_MESSAGE';\r\nexport const ADD_UK_MESSAGE = 'ADD_UK_MESSAGE';\r\n","import { SET_MESSAGE_HISTORY, ADD_GLOBAL_MESSAGE, ADD_UK_MESSAGE } from '../constants/messagesActions';\r\n\r\nexport const messagesReducer = (state, action) => {\r\n  let globalMessages;\r\n  let ukMessages;\r\n\r\n  switch (action.type) {\r\n    case SET_MESSAGE_HISTORY:\r\n      globalMessages = [...action.payload.global];\r\n      ukMessages = [...action.payload.uk];\r\n      const messagesObj = { global: globalMessages, uk: ukMessages };\r\n      return { ...state, messages: messagesObj };\r\n\r\n    case ADD_GLOBAL_MESSAGE:\r\n      let globalArr = [...state.messages.global];\r\n      globalArr.push(action.payload);\r\n      return { ...state, messages: { ...state.messages, global: globalArr } };\r\n    case ADD_UK_MESSAGE:\r\n      let ukArr = [...state.messages.uk];\r\n      ukArr.push(action.payload);\r\n      return { ...state, messages: { ...state.messages, uk: ukArr } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport { channelReducer } from './reducers/channelReducer';\r\nimport { usersReducer } from './reducers/usersReducer';\r\nimport { CHANNEL_GLOBAL } from './constants/channels';\r\nimport { messagesReducer } from './reducers/messagesReducer';\r\nimport { isEqual } from 'lodash';\r\n\r\nexport const Store = React.createContext();\r\n\r\nconst initialState = {\r\n  channel: CHANNEL_GLOBAL,\r\n  channelIndex: 0,\r\n  users: [],\r\n  userId: '',\r\n  messages: {\r\n    global: [],\r\n    uk: [],\r\n    server: []\r\n  }\r\n};\r\n\r\nconst mainReducer = (state, action) => {\r\n  /*\r\n    Middleware goes here.\r\n   */\r\n  let reducers = [channelReducer, usersReducer, messagesReducer];\r\n  let stateObj = null;\r\n\r\n  for (let reducer of reducers) {\r\n    let newState = reducer(state, action);\r\n    if (!isEqual(newState, state)) {\r\n      stateObj = newState;\r\n    }\r\n  }\r\n\r\n  if (stateObj !== null) {\r\n    return stateObj;\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport const StoreProvider = props => {\r\n  const [state, dispatch] = useReducer(mainReducer, initialState);\r\n  const value = { state, dispatch };\r\n\r\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\r\n};\r\n","import React from 'react';\r\nimport { CHANNEL_LIST } from '../constants/channels';\r\n\r\nexport const Sockets = React.createContext();\r\n\r\nexport const SocketsProvider = props => {\r\n  const sockets = connect();\r\n  const value = { sockets };\r\n\r\n  return <Sockets.Provider value={value}>{props.children}</Sockets.Provider>;\r\n};\r\n\r\nconst connect = () => {\r\n  // DEV\r\n  //const socket = new WebSocket(\"ws://localhost:8080/ws/\" + channel\");\r\n  const channels = CHANNEL_LIST;\r\n  const sockets = [];\r\n\r\n  for (const channel of channels) {\r\n    console.log('Connecting to channel: ', channel);\r\n    const socket = new WebSocket('wss://' + window.location.host + '/ws/' + channel);\r\n\r\n    socket.onclose = () => {\r\n      console.dir('Connection to chat server closed, attempting to reconnect...');\r\n      setTimeout(function() {\r\n        connect();\r\n      }, 1000);\r\n    };\r\n\r\n    const socketInfo = {\r\n      name: channel,\r\n      socket: socket\r\n    };\r\n\r\n    sockets.push(socketInfo);\r\n  }\r\n  return sockets;\r\n};\r\n","import React from 'react';\r\nimport { Grid, Typography, withStyles } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  myMessage: {\r\n    minHeight: '16px',\r\n    minWidth: '16px',\r\n    borderRadius: 12,\r\n    backgroundColor: '#4a919ecf',\r\n    color: '#fffafa',\r\n    padding: 12,\r\n    margin: 4\r\n  },\r\n  notMyMessage: {\r\n    minHeight: '16px',\r\n    minWidth: '16px',\r\n    borderRadius: 12,\r\n    backgroundColor: '#212e53e6',\r\n    color: '#fffafa',\r\n    padding: 12,\r\n    margin: 4\r\n  }\r\n});\r\n\r\nconst MessageBox = props => {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Grid container item xs={12} justify={props.author ? 'flex-end' : 'flex-start'} style={{ padding: 3 }}>\r\n      {props.authorName !== 'SERVER' && (\r\n        <Grid item xs={12}>\r\n          <Typography align={props.author ? 'right' : 'left'} variant=\"caption\" style={{ color: '#696969', fontWeight: 'bold' }}>\r\n            {props.authorName}\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item style={{ flexShrink: 1 }}>\r\n        <Typography variant=\"body2\" className={props.author ? classes.myMessage : classes.notMyMessage}>\r\n          {props.messageContent}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(MessageBox);\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport MessageContainer from './MessageContainer';\r\nimport { Grid, Card, Tab, Tabs, AppBar, withStyles, Button, Fab } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport { Store } from '../store';\r\nimport { SET_CHANNEL } from '../constants/channelActions';\r\nimport { CHANNEL_GLOBAL, CHANNEL_UK } from '../constants/channels';\r\nimport { Sockets } from '../utils/socket';\r\nimport { SERVER_MESSAGE } from '../constants/messageTypes';\r\nimport MessageBox from './MessageBox';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  card: {\r\n    marginTop: '40px',\r\n    borderRadius: '20px',\r\n    border: 'solid thin #00000036',\r\n    minWidth: '50%',\r\n    maxWidth: '100%'\r\n  },\r\n  noTop: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: '0px',\r\n      paddingTop: '0px'\r\n    }\r\n  },\r\n  noButton: {\r\n      [theme.breakpoints.down('sm')]: {\r\n        display: 'none'\r\n      }\r\n  },\r\n  footerCard: {\r\n    borderRadius: '25px'\r\n  },\r\n  rightIcon: {\r\n    marginRight: theme.spacing.unit\r\n  }\r\n});\r\n\r\nconst ChatContainer = props => {\r\n  const { classes } = props;\r\n  const { state, dispatch } = useContext(Store);\r\n  const { sockets } = useContext(Sockets);\r\n  const [index, setIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      forceScrollToBottom();\r\n    }, 400);\r\n  }, []);\r\n  const changeChannel = (event, value) => {\r\n    setTimeout(() => {\r\n      forceScrollToBottom();\r\n    }, 100);\r\n    setIndex(value);\r\n    const channelSelected = value === 0 ? { name: CHANNEL_GLOBAL, index: 0 } : { name: CHANNEL_UK, index: 1 };\r\n\r\n    dispatch({\r\n      type: SET_CHANNEL,\r\n      payload: channelSelected\r\n    });\r\n  };\r\n\r\n  const handleSendMessage = input => {\r\n    const currSocket = sockets.find(x => x.name === state.channel);\r\n    if (input !== '') {\r\n      currSocket.socket.send(input);\r\n    }\r\n  };\r\n\r\n  const forceScrollToBottom = () => {\r\n    let listEnd = document.getElementById('endOfChat');\r\n    listEnd.scrollTop = listEnd.scrollHeight;\r\n  };\r\n\r\n  const renderMessages = userMessagesOnly => {\r\n    let messageArray;\r\n\r\n    if (userMessagesOnly) {\r\n      messageArray = state.channel === CHANNEL_GLOBAL ? state.messages.global : state.messages.uk;\r\n      messageArray = messageArray.filter(x => x.type !== SERVER_MESSAGE);\r\n    } else {\r\n      messageArray = [...state.messages.global, ...state.messages.uk];\r\n      messageArray = messageArray.filter(x => x.type === SERVER_MESSAGE).reverse();\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {messageArray.map((msg, index) => {\r\n          return <MessageBox key={index} author={msg.userId === state.userId} authorName={msg.sender} messageContent={msg.message} />;\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classNames(classes.root, classes.content, classes.toolbar)}>\r\n        <Grid container justify=\"center\">\r\n          <Card className={classNames(classes.card, classes.noTop)}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n              <Tabs value={index} onChange={changeChannel} indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\">\r\n                <Tab label=\"Global\" />\r\n                <Tab label=\"United Kingdom\" />\r\n              </Tabs>\r\n            </AppBar>\r\n\r\n            <MessageContainer\r\n              forceScroll={forceScrollToBottom}\r\n              messageList={renderMessages}\r\n              sendHandler={handleSendMessage}\r\n              style={{ padding: 16, margin: 16 }}\r\n            />\r\n          </Card>\r\n        </Grid>\r\n      </div>\r\n      <Grid className={classes.noButton} container justify=\"center\">\r\n        <Fab variant=\"extended\" style={{ backgroundColor: '#ce6a6b12' }} aria-label=\"Github\" target=\"_blank\" href={'https://github.com/ADWilkinson'}>\r\n          <div className={classes.rightIcon}>\r\n            <i className={'fab fa-github'} />\r\n          </div>\r\n          <span>{'Created with'} </span>\r\n          <i style={{ padding: '0px 7px 0px 7px', color: '#ce6a6b' }} className={'fas fa-heart'} />\r\n          <span>{'by Andrew Wilkinson'} </span>\r\n        </Fab>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ChatContainer);\r\n","export const USER_MESSAGE = 'USER_MESSAGE';\r\nexport const SERVER_MESSAGE = 'SERVER_MESSAGE';\r\nexport const SERVER_UPDATE_MESSAGES = 'SERVER_UPDATE_MESSAGES';\r\nexport const SERVER_UPDATE_USERS = 'SERVER_UPDATE_USERS';","import React, { useState } from 'react';\r\nimport { withStyles, Drawer, Grid, Typography, Divider, Hidden, Icon, IconButton, MenuItem, Fab } from '@material-ui/core';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport Arrow from '@material-ui/icons/ArrowBack';\r\nimport classNames from 'classnames';\r\n\r\nconst styles = theme => ({\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 240,\r\n      flexShrink: 0,\r\n      overflowY: 'auto'\r\n    }\r\n  },\r\n  fab: {\r\n    margin: theme.spacing.unit\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  drawerPaper: {\r\n    paddingTop: '4em',\r\n    width: 240,\r\n    top: 'inherit'\r\n  },\r\n  userBar: {\r\n    color: '#242424e6',\r\n    padding: '5px',\r\n    fontWeight: 'bold'\r\n  },\r\n  toolbar: theme.mixins.toolbar\r\n});\r\n\r\nconst ParticipantsContainer = props => {\r\n  const { classes } = props;\r\n  const [mobile, setMobile] = useState({ mobileOpen: false });\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobile(mobile => ({ mobileOpen: !mobile.mobileOpen }));\r\n  };\r\n\r\n  const renderParticpants = users => {\r\n    return (\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography style={{ color: '#212e53ed' }} align=\"center\" variant=\"h6\">\r\n            Users\r\n          </Typography>\r\n          <Typography style={{ color: users.length === 0 ? '#ebaca2' : '#4a919e' }} align=\"center\" variant=\"caption\">\r\n            {users.length} total\r\n          </Typography>\r\n          <Divider style={{ margin: '5px 0px 0px 0px' }} />\r\n        </Grid>\r\n        {users.map((user, index) => {\r\n          return (\r\n            <Grid key={index} item xs={12}>\r\n              <Typography\r\n                align=\"center\"\r\n                style={{ backgroundColor: index % 2 === 0 ? '#bed3c399' : 'rgba(74, 145, 158, 0.39)' }}\r\n                variant=\"caption\"\r\n                className={classes.userBar}\r\n              >\r\n                {user.id}\r\n              </Typography>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Fab color=\"secondary\" aria-label=\"People\" style={{\r\n          position: 'absolute',\r\n          transform: 'translateY(-50px)',\r\n          zIndex: '1250'}} onClick={handleDrawerToggle} className={classNames(classes.fab, classes.menuButton)}>\r\n          <PeopleIcon />\r\n        </Fab>\r\n      </div>\r\n      <Hidden smUp implementation=\"css\">\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          open={mobile.mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n        >\r\n          <div style={{\r\n            marginLeft: 'auto', marginRight: 'auto', marginBottom: '1em'}}>\r\n            <Fab color=\"primary\" aria-label=\"Back\" align=\"center\"  onClick={handleDrawerToggle} className={classNames(classes.fab, classes.menuButton)}>\r\n              <Arrow />\r\n            </Fab>\r\n          </div>\r\n          {renderParticpants(props.participants)}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Drawer\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n          variant=\"permanent\"\r\n          open\r\n        >\r\n          {renderParticpants(props.participants)}\r\n        </Drawer>\r\n      </Hidden>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ParticipantsContainer);\r\n","import { CHANNEL_UK, CHANNEL_GLOBAL } from '../constants/channels';\r\nimport { USER_MESSAGE, SERVER_MESSAGE, SERVER_UPDATE_MESSAGES, SERVER_UPDATE_USERS } from '../constants/messageTypes';\r\nimport { ADD_GLOBAL_MESSAGE, ADD_UK_MESSAGE, SET_MESSAGE_HISTORY } from '../constants/messagesActions';\r\nimport { SET_USERS_LIST, SET_USER_ID } from '../constants/usersActions';\r\n\r\nexport default class MessageProcessor {\r\n  constructor(dispatch) {\r\n    this.dispatch = dispatch;\r\n  }\r\n\r\n  dispatch;\r\n\r\n  async execute(data) {\r\n    switch (data.type) {\r\n      case USER_MESSAGE:\r\n        await this.addMessageToStore(data);\r\n        break;\r\n      case SERVER_MESSAGE:\r\n        await this.addMessageToStore(data);\r\n        break;\r\n      case SERVER_UPDATE_MESSAGES:\r\n        await this.setMessageHistoryToStore(data);\r\n        break;\r\n      case SERVER_UPDATE_USERS:\r\n        await this.setUserListToStore(data);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  dispatchAction = async (type, payload) => {\r\n    await this.dispatch({\r\n      type: type,\r\n      payload: payload\r\n    });\r\n  };\r\n\r\n  addMessageToStore = async data => {\r\n    const messageObj = {\r\n      userId: data.userId,\r\n      sender: data.sender,\r\n      channel: data.channel,\r\n      recipient: data.recipient,\r\n      message: data.message,\r\n      timestamp: data.messageTime,\r\n      type: data.type\r\n    };\r\n\r\n    if (data.channel === CHANNEL_GLOBAL) {\r\n      await this.dispatchAction(ADD_GLOBAL_MESSAGE, messageObj);\r\n    }\r\n\r\n    if (data.channel === CHANNEL_UK) {\r\n      await this.dispatchAction(ADD_UK_MESSAGE, messageObj);\r\n    }\r\n  };\r\n\r\n  setMessageHistoryToStore = async data => {\r\n    const globalMessages = [];\r\n    const ukMessages = [];\r\n    const userId = data.recipient;\r\n\r\n    data.messageHistory.forEach(message => {\r\n      if (message.channel === CHANNEL_GLOBAL) {\r\n        globalMessages.push({\r\n          userId: message.userId,\r\n          sender: message.sender,\r\n          channel: message.channel,\r\n          recipient: message.recipient,\r\n          message: message.message,\r\n          timestamp: message.messageTime,\r\n          type: data.type\r\n        });\r\n      } else if (message.channel === CHANNEL_UK) {\r\n        ukMessages.push({\r\n          userId: message.userId,\r\n          sender: message.sender,\r\n          channel: message.channel,\r\n          recipient: message.recipient,\r\n          message: message.message,\r\n          timestamp: message.messageTime,\r\n          type: data.type\r\n        });\r\n      }\r\n    });\r\n\r\n    const payload = {\r\n      global: globalMessages,\r\n      uk: ukMessages\r\n    };\r\n\r\n    await this.dispatchAction(SET_MESSAGE_HISTORY, payload);\r\n    await this.dispatchAction(SET_USER_ID, userId);\r\n  };\r\n\r\n  setUserListToStore = async data => {\r\n    await this.dispatchAction(SET_USERS_LIST, data.participants);\r\n  };\r\n}\r\n","import React, { useEffect, useContext } from 'react';\r\nimport ChatContainer from '../components/ChatContainer';\r\nimport ParticipantsContainer from '../components/ParticipantsContainer';\r\nimport { Store } from '../store';\r\nimport { Sockets } from '../utils/socket';\r\nimport MessageProcessor from '../utils/messageProcessor';\r\n\r\nconst HomePage = () => {\r\n  const { state, dispatch } = useContext(Store);\r\n  const { sockets } = useContext(Sockets);\r\n  const processor = new MessageProcessor(dispatch);\r\n\r\n  useEffect(() => {\r\n    for (const socketInfo of sockets) {\r\n      socketInfo.socket.onopen = () => {\r\n        console.log('Succesfully connected to channel: ' + socketInfo.name);\r\n      };\r\n\r\n      socketInfo.socket.onerror = () => {\r\n        console.log('Uh oh... there was an error connected to the chat server');\r\n      };\r\n\r\n      socketInfo.socket.onmessage = async event => {\r\n        const data = JSON.parse(event.data);\r\n        await processor.execute(data);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ParticipantsContainer participants={state.users} />\r\n      <ChatContainer messages={state.messages} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport HomePage from '../pages/HomePage';\r\n\r\nexport default props => (\r\n  <Router>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={HomePage} />\r\n    </Switch>\r\n  </Router>\r\n);\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nconst rawTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#ebaca2',\r\n      main: '#ce6a6b',\r\n      dark: '#212e53'\r\n    },\r\n    secondary: {\r\n      light: '#bed3c3',\r\n      main: '#4a919e',\r\n      dark: '#212e53'\r\n    },\r\n    warning: {\r\n      main: '#ffc071',\r\n      dark: '#ffb25e'\r\n    },\r\n    error: {\r\n      xLight: red[50],\r\n      main: red[500],\r\n      dark: red[700]\r\n    },\r\n    success: {\r\n      xLight: green[50],\r\n      dark: green[700]\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Work Sans', sans-serif\",\r\n    fontSize: 14,\r\n    fontWeightLight: 300, // Work Sans\r\n    fontWeightRegular: 400, // Work Sans\r\n    fontWeightMedium: 700, // Roboto Condensed\r\n    fontFamilySecondary: \"'Roboto Condensed', sans-serif\",\r\n    useNextVariants: true\r\n  }\r\n});\r\n\r\nconst fontHeader = {\r\n  color: rawTheme.palette.text.primary,\r\n  fontWeight: rawTheme.typography.fontWeightMedium,\r\n  fontFamily: rawTheme.typography.fontFamilySecondary,\r\n  textTransform: 'uppercase'\r\n};\r\n\r\nconst theme = {\r\n  ...rawTheme,\r\n  palette: {\r\n    ...rawTheme.palette,\r\n    background: {\r\n      ...rawTheme.palette.background,\r\n      default: '#ebaca217',\r\n      placeholder: grey[200]\r\n    }\r\n  },\r\n  typography: {\r\n    ...rawTheme.typography,\r\n    fontHeader,\r\n    h1: {\r\n      ...rawTheme.typography.h1,\r\n      ...fontHeader,\r\n      letterSpacing: 0,\r\n      fontSize: 60\r\n    },\r\n    h2: {\r\n      ...rawTheme.typography.h2,\r\n      ...fontHeader,\r\n      fontSize: 48\r\n    },\r\n    h3: {\r\n      ...rawTheme.typography.h3,\r\n      ...fontHeader,\r\n      fontSize: 42\r\n    },\r\n    h4: {\r\n      ...rawTheme.typography.h4,\r\n      ...fontHeader,\r\n      fontSize: 36\r\n    },\r\n    h5: {\r\n      ...rawTheme.typography.h5,\r\n      fontSize: 20,\r\n      fontWeight: rawTheme.typography.fontWeightLight\r\n    },\r\n    h6: {\r\n      ...rawTheme.typography.h6,\r\n      ...fontHeader,\r\n      fontSize: 18\r\n    },\r\n    subtitle1: {\r\n      ...rawTheme.typography.subtitle1,\r\n      fontSize: 18\r\n    },\r\n    body1: {\r\n      ...rawTheme.typography.body2,\r\n      fontWeight: rawTheme.typography.fontWeightRegular,\r\n      fontSize: 16\r\n    },\r\n    body2: {\r\n      ...rawTheme.typography.body1,\r\n      fontSize: 14\r\n    }\r\n  }\r\n};\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport MuiAppBar from '@material-ui/core/AppBar';\r\nimport MuiToolbar from '@material-ui/core/Toolbar';\r\n\r\nconst styles = theme => ({\r\n  topLayer: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  title: {\r\n    fontSize: 24\r\n  },\r\n  toolbar: {\r\n    justifyContent: 'space-between'\r\n  },\r\n  left: {\r\n    flex: 1\r\n  },\r\n  leftLinkActive: {\r\n    color: theme.palette.common.white\r\n  },\r\n  right: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  },\r\n  rightLink: {\r\n    fontSize: 16,\r\n    color: theme.palette.common.white,\r\n    marginLeft: theme.spacing.unit * 3\r\n  },\r\n  linkSecondary: {\r\n    color: theme.palette.secondary.main\r\n  }\r\n});\r\n\r\nconst Navbar = props => {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <MuiAppBar position=\"static\" className={classes.topLayer}>\r\n      <MuiToolbar className={classNames(classes.toolbar, classes.topLayer)}>\r\n        <div className={classes.left} />\r\n        <Link variant=\"h6\" underline=\"none\" color=\"inherit\" className={classes.title} href=\"/\">\r\n          ChitChatter\r\n          <img style={{ height: '1.5em', paddingLeft: '0.5em' }} src={require('../assets/conversation.png')} />\r\n        </Link>\r\n        <div className={classes.right} />\r\n      </MuiToolbar>\r\n    </MuiAppBar>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Navbar);\r\n","import React from 'react';\r\nimport Routes from './components/Routes';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './theme/theme';\r\nimport Navbar from './components/Navbar';\r\nimport { StoreProvider } from './store';\r\nimport { SocketsProvider } from './utils/socket';\r\nimport './index.css';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst App = () => {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <StoreProvider>\r\n        <CssBaseline />\r\n\r\n        <header>\r\n          <Navbar />\r\n        </header>\r\n\r\n        <SocketsProvider>\r\n          <main>\r\n            <Routes />\r\n          </main>\r\n        </SocketsProvider>\r\n\r\n        <footer />\r\n        \r\n      </StoreProvider>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}