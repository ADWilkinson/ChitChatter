{"version":3,"sources":["assets/conversation.png","components/MessageContainer.js","reducers/channelReducer.js","constants/channelActions.js","constants/usersActions.js","reducers/usersReducer.js","constants/channels.js","constants/messagesActions.js","reducers/messagesReducer.js","store.js","utils/socket.js","components/MessageBox.js","components/ChatContainer.js","constants/messageTypes.js","components/ParticipantsContainer.js","utils/messageProcessor.js","pages/HomePage.js","components/Routes.js","theme/theme.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","theme","messages","overflowY","minHeight","maxHeight","overflow","log","card","minWidth","maxWidth","subtitle","fontWeight","color","borderRadius","padding","margin","props","classes","_useState","useState","_useState2","Object","slicedToArray","userInput","setUserInput","endOfChat","React","createRef","sendMessage","sendHandler","scrollToBottom","current","scrollIntoView","behavior","block","inline","react_default","a","createElement","Fragment","index_es","id","className","container","alignContent","messageList","style","paddingTop","ref","wrap","justify","item","xs","justifty","label","autoFocus","value","onChange","event","target","onKeyDown","key","toLowerCase","preventDefault","InputProps","disableUnderline","variant","disabled","onClick","forceScroll","Send_default","paddingLeft","channelReducer","state","action","type","objectSpread","channel","payload","name","channelIndex","index","SET_USERS_LIST","SET_USER_ID","usersReducer","users","userId","CHANNEL_GLOBAL","CHANNEL_UK","CHANNEL_LIST","SET_MESSAGE_HISTORY","ADD_GLOBAL_MESSAGE","ADD_UK_MESSAGE","messagesReducer","messagesObj","global","toConsumableArray","uk","globalArr","push","ukArr","Store","createContext","initialState","server","mainReducer","stateObj","_arr","_i","length","newState","reducer","isEqual","StoreProvider","_useReducer","useReducer","_useReducer2","dispatch","Provider","children","Sockets","SocketsProvider","sockets","connect","channels","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","console","socket","WebSocket","window","location","host","onclose","dir","setTimeout","socketInfo","err","return","myMessage","backgroundColor","notMyMessage","author","authorName","align","flexShrink","messageContent","root","flexGrow","content","spacing","unit","toolbar","mixins","marginTop","border","noTop","defineProperty","breakpoints","down","noButton","display","footerCard","rightIcon","marginRight","_useContext","useContext","setIndex","useEffect","forceScrollToBottom","listEnd","document","getElementById","scrollTop","scrollHeight","classNames","position","indicatorColor","textColor","components_MessageContainer","userMessagesOnly","messageArray","filter","x","concat","reverse","map","msg","components_MessageBox","sender","message","input","currSocket","find","send","aria-label","href","drawer","up","width","fab","menuButton","drawerPaper","top","userBar","mobileOpen","mobile","setMobile","handleDrawerToggle","renderParticpants","user","transform","zIndex","People_default","smUp","implementation","open","onClose","paper","marginLeft","marginBottom","ArrowBack_default","participants","xsDown","MessageProcessor","_this","this","classCallCheck","dispatchAction","_ref","asyncToGenerator","regenerator_default","mark","_callee","_context","prev","stop","_x","_x2","apply","arguments","addMessageToStore","_ref2","_callee2","data","messageObj","_context2","recipient","timestamp","messageTime","_x3","setMessageHistoryToStore","_ref3","_callee3","globalMessages","ukMessages","_context3","messageHistory","forEach","_x4","setUserListToStore","_ref4","_callee4","_context4","_x5","HomePage","processor","_loop","onopen","onerror","onmessage","JSON","parse","execute","components_ParticipantsContainer","components_ChatContainer","Routes","react_router_dom","react_router","exact","path","component","rawTheme","createMuiTheme","palette","primary","light","main","dark","secondary","warning","error","xLight","red","success","green","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontFamilySecondary","useNextVariants","fontHeader","text","textTransform","background","default","placeholder","grey","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","body1","body2","topLayer","title","justifyContent","left","flex","leftLinkActive","common","white","right","rightLink","linkSecondary","AppBar_default","Toolbar_default","Link_default","underline","height","src","require","App","core_styles","store_StoreProvider","CssBaseline_default","components_Navbar","socket_SocketsProvider","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46b1a235.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/conversation.c61c5837.png\";","import React, { useState } from 'react';\nimport { Grid, CardContent, withStyles, TextField, Divider, Button, Typography } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst styles = theme => ({\n  messages: {\n    overflowY: 'auto',\n    minHeight: '25em',\n    maxHeight: '25em',\n    overflow: 'auto'\n  },\n  log: {\n    overflowY: 'auto',\n    minHeight: 150,\n    maxHeight: 150,\n    overflow: 'auto'\n  },\n  card: {\n    minWidth: '25em',\n    maxWidth: '25em'\n  },\n  subtitle: {\n    fontWeight: 'bold',\n    color: '#212e53de',\n    minHeight: '16px',\n    minWidth: '16px',\n    borderRadius: 8,\n    padding: '6px 6px 0px 6px',\n    margin: 0\n  }\n});\n\nconst MessageContainer = props => {\n  const { classes } = props;\n  const [userInput, setUserInput] = useState('');\n  const endOfChat = React.createRef();\n\n  const sendMessage = () => {\n    if (userInput !== '') {\n      props.sendHandler(userInput);\n    }\n    setUserInput('');\n    scrollToBottom();\n  };\n\n  const handleSendButton = () => {\n    sendMessage();\n    props.forceScroll();\n  };\n\n  const handleChange = event => {\n    setUserInput(event.target.value);\n    scrollToBottom();\n  };\n\n  const handleEnter = event => {\n    if (event.key.toLowerCase() === 'enter' && userInput !== '') {\n      sendMessage();\n      event.preventDefault();\n    }\n  };\n\n  const scrollToBottom = () => {\n    endOfChat.current.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' });\n  };\n\n  return (\n    <React.Fragment>\n      <CardContent id=\"endOfChat\" className={classes.messages}>\n        <Grid container alignContent={'flex-end'}>\n          {props.messageList(true)}\n        </Grid>\n        <div style={{ paddingTop: '80px' }} ref={endOfChat} />\n      </CardContent>\n      <Divider />\n\n      <Grid container wrap=\"nowrap\" justify=\"center\" style={{ margin: 12 }}>\n        <Grid item xs={10} container   style={{color: '#212e53'}} justifty=\"center\">\n          <TextField        \n            label=\"Type a message...\"\n            autoFocus\n            className={classes.card}\n            value={userInput}\n            onChange={handleChange}\n            onKeyDown={handleEnter}\n            InputProps={{\n              disableUnderline: true\n            }}\n          />\n        </Grid>\n        <Grid item xs={2} container justify=\"center\">\n          <Button style={{color: userInput === '' ? 'rgba(0,0,0,.2)' : '#212e53'}} variant=\"text\" disabled={userInput === ''} onClick={handleSendButton}>\n            Send\n            <SendIcon\n              style={{\n                paddingLeft: '6px',\n                color: userInput === '' ? 'rgba(0,0,0,.2)' : '#212e53'\n              }}\n            />\n          </Button>\n        </Grid>\n      </Grid>\n      <Divider />\n      <CardContent className={classes.log}>\n        <Typography variant=\"body2\" className={classes.subtitle}>\n          {'Server Messages'}\n        </Typography>\n        <Typography style={{ color: '#ebaca2', padding: 6,\n    margin: 2 }} variant=\"caption\">\n            Type '/help' for information\n        </Typography>\n        <Divider />\n        <Grid container>{props.messageList(false)}</Grid>\n      </CardContent>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(MessageContainer);\n","import { SET_CHANNEL } from \"../constants/channelActions\";\n\nexport const channelReducer = (state, action) => {\n  switch (action.type) {\n    case SET_CHANNEL:\n      return { ...state, channel: action.payload.name, channelIndex: action.payload.index };\n    default:\n      return state;\n  }\n};\n","export const SET_CHANNEL = 'SET_CHANNEL';\n","export const SET_USERS_LIST = 'SET_USERS_LIST';\nexport const SET_USER_ID = 'SET_USER_ID';\n","import { SET_USERS_LIST, SET_USER_ID } from '../constants/usersActions';\n\nexport const usersReducer = (state, action) => {\n  switch (action.type) {\n    case SET_USERS_LIST:\n      return { ...state, users: action.payload };\n    case SET_USER_ID:\n      return { ...state, userId: action.payload };\n    default:\n      return state;\n  }\n};\n","export const CHANNEL_GLOBAL = 'Global';\nexport const CHANNEL_UK = 'UK';\nexport const CHANNEL_LIST = [CHANNEL_GLOBAL, CHANNEL_UK];","export const SET_MESSAGE_HISTORY = 'SET_MESSAGE_HISTORY';\nexport const ADD_GLOBAL_MESSAGE = 'ADD_GLOBAL_MESSAGE';\nexport const ADD_UK_MESSAGE = 'ADD_UK_MESSAGE';\n","import { SET_MESSAGE_HISTORY, ADD_GLOBAL_MESSAGE, ADD_UK_MESSAGE } from '../constants/messagesActions';\n\nexport const messagesReducer = (state, action) => {\n  let globalMessages;\n  let ukMessages;\n\n  switch (action.type) {\n    case SET_MESSAGE_HISTORY:\n      globalMessages = [...action.payload.global];\n      ukMessages = [...action.payload.uk];\n      const messagesObj = { global: globalMessages, uk: ukMessages };\n      return { ...state, messages: messagesObj };\n\n    case ADD_GLOBAL_MESSAGE:\n      let globalArr = [...state.messages.global];\n      globalArr.push(action.payload);\n      return { ...state, messages: { ...state.messages, global: globalArr } };\n    case ADD_UK_MESSAGE:\n      let ukArr = [...state.messages.uk];\n      ukArr.push(action.payload);\n      return { ...state, messages: { ...state.messages, uk: ukArr } };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport { channelReducer } from './reducers/channelReducer';\nimport { usersReducer } from './reducers/usersReducer';\nimport { CHANNEL_GLOBAL } from './constants/channels';\nimport { messagesReducer } from './reducers/messagesReducer';\nimport { isEqual } from 'lodash';\n\nexport const Store = React.createContext();\n\nconst initialState = {\n  channel: CHANNEL_GLOBAL,\n  channelIndex: 0,\n  users: [],\n  userId: '',\n  messages: {\n    global: [],\n    uk: [],\n    server: []\n  }\n};\n\nconst mainReducer = (state, action) => {\n  /*\n    Middleware goes here.\n   */\n  let reducers = [channelReducer, usersReducer, messagesReducer];\n  let stateObj = null;\n\n  for (let reducer of reducers) {\n    let newState = reducer(state, action);\n    if (!isEqual(newState, state)) {\n      stateObj = newState;\n    }\n  }\n\n  if (stateObj !== null) {\n    return stateObj;\n  } else {\n    return state;\n  }\n};\n\nexport const StoreProvider = props => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n  const value = { state, dispatch };\n\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n};\n","import React from 'react';\nimport { CHANNEL_LIST } from '../constants/channels';\n\nexport const Sockets = React.createContext();\n\nexport const SocketsProvider = props => {\n  const sockets = connect();\n  const value = { sockets };\n\n  return <Sockets.Provider value={value}>{props.children}</Sockets.Provider>;\n};\n\nconst connect = () => {\n  // DEV\n  //const socket = new WebSocket(\"ws://localhost:8080/ws/\" + channel\");\n  const channels = CHANNEL_LIST;\n  const sockets = [];\n\n  for (const channel of channels) {\n    console.log('Connecting to channel: ', channel);\n    const socket = new WebSocket('wss://' + window.location.host + '/ws/' + channel);\n\n    socket.onclose = () => {\n      console.dir('Connection to chat server closed, attempting to reconnect...');\n      setTimeout(function() {\n        // connect();\n      }, 1000);\n    };\n\n    const socketInfo = {\n      name: channel,\n      socket: socket\n    };\n\n    sockets.push(socketInfo);\n  }\n  return sockets;\n};\n","import React from 'react';\nimport { Grid, Typography, withStyles } from '@material-ui/core';\n\nconst styles = theme => ({\n  myMessage: {\n    minHeight: '16px',\n    minWidth: '16px',\n    borderRadius: 12,\n    backgroundColor: '#4a919ecf',\n    color: '#fffafa',\n    padding: 12,\n    margin: 4\n  },\n  notMyMessage: {\n    minHeight: '16px',\n    minWidth: '16px',\n    borderRadius: 12,\n    backgroundColor: '#212e53e6',\n    color: '#fffafa',\n    padding: 12,\n    margin: 4\n  }\n});\n\nconst MessageBox = props => {\n  const { classes } = props;\n\n  return (\n    <Grid container item xs={12} justify={props.author ? 'flex-end' : 'flex-start'} style={{ padding: 3 }}>\n      {props.authorName !== 'SERVER' && (\n        <Grid item xs={12}>\n          <Typography align={props.author ? 'right' : 'left'} variant=\"caption\" style={{ color: '#696969', fontWeight: 'bold' }}>\n            {props.authorName}\n          </Typography>\n        </Grid>\n      )}\n\n      <Grid item style={{ flexShrink: 1 }}>\n        <Typography variant=\"body2\" className={props.author ? classes.myMessage : classes.notMyMessage}>\n          {props.messageContent}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(MessageBox);\n","import React, { useContext, useState, useEffect } from 'react';\nimport MessageContainer from './MessageContainer';\nimport { Grid, Card, Tab, Tabs, AppBar, withStyles, Button, Fab } from '@material-ui/core';\nimport classNames from 'classnames';\nimport { Store } from '../store';\nimport { SET_CHANNEL } from '../constants/channelActions';\nimport { CHANNEL_GLOBAL, CHANNEL_UK } from '../constants/channels';\nimport { Sockets } from '../utils/socket';\nimport { SERVER_MESSAGE } from '../constants/messageTypes';\nimport MessageBox from './MessageBox';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3\n  },\n  toolbar: theme.mixins.toolbar,\n  card: {\n    marginTop: '40px',\n    borderRadius: '20px',\n    border: 'solid thin #00000036',\n    minWidth: '50%',\n    maxWidth: '100%'\n  },\n  noTop: {\n    [theme.breakpoints.down('sm')]: {\n      marginTop: '0px',\n      paddingTop: '0px'\n    }\n  },\n  noButton: {\n      [theme.breakpoints.down('sm')]: {\n        display: 'none'\n      }\n  },\n  footerCard: {\n    borderRadius: '25px'\n  },\n  rightIcon: {\n    marginRight: theme.spacing.unit\n  }\n});\n\nconst ChatContainer = props => {\n  const { classes } = props;\n  const { state, dispatch } = useContext(Store);\n  const { sockets } = useContext(Sockets);\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      forceScrollToBottom();\n    }, 400);\n  }, []);\n  const changeChannel = (event, value) => {\n    setTimeout(() => {\n      forceScrollToBottom();\n    }, 100);\n    setIndex(value);\n    const channelSelected = value === 0 ? { name: CHANNEL_GLOBAL, index: 0 } : { name: CHANNEL_UK, index: 1 };\n\n    dispatch({\n      type: SET_CHANNEL,\n      payload: channelSelected\n    });\n  };\n\n  const handleSendMessage = input => {\n    const currSocket = sockets.find(x => x.name === state.channel);\n    if (input !== '') {\n      currSocket.socket.send(input);\n    }\n  };\n\n  const forceScrollToBottom = () => {\n    let listEnd = document.getElementById('endOfChat');\n    listEnd.scrollTop = listEnd.scrollHeight;\n  };\n\n  const renderMessages = userMessagesOnly => {\n    let messageArray;\n\n    if (userMessagesOnly) {\n      messageArray = state.channel === CHANNEL_GLOBAL ? state.messages.global : state.messages.uk;\n      messageArray = messageArray.filter(x => x.type !== SERVER_MESSAGE);\n    } else {\n      messageArray = [...state.messages.global, ...state.messages.uk];\n      messageArray = messageArray.filter(x => x.type === SERVER_MESSAGE).reverse();\n    }\n\n    return (\n      <React.Fragment>\n        {messageArray.map((msg, index) => {\n          return <MessageBox key={index} author={msg.userId === state.userId} authorName={msg.sender} messageContent={msg.message} />;\n        })}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classNames(classes.root, classes.content, classes.toolbar)}>\n        <Grid container justify=\"center\">\n          <Card className={classNames(classes.card, classes.noTop)}>\n            <AppBar position=\"static\" color=\"default\">\n              <Tabs value={index} onChange={changeChannel} indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\">\n                <Tab label=\"Global\" />\n                <Tab label=\"United Kingdom\" />\n              </Tabs>\n            </AppBar>\n\n            <MessageContainer\n              forceScroll={forceScrollToBottom}\n              messageList={renderMessages}\n              sendHandler={handleSendMessage}\n              style={{ padding: 16, margin: 16 }}\n            />\n          </Card>\n        </Grid>\n      </div>\n      <Grid className={classes.noButton} container justify=\"center\">\n        <Fab variant=\"extended\" style={{ backgroundColor: '#ce6a6b12' }} aria-label=\"Github\" target=\"_blank\" href={'https://github.com/ADWilkinson'}>\n          <div className={classes.rightIcon}>\n            <i className={'fab fa-github'} />\n          </div>\n          <span>{'Created with'} </span>\n          <i style={{ padding: '0px 7px 0px 7px', color: '#ce6a6b' }} className={'fas fa-heart'} />\n          <span>{'by Andrew Wilkinson'} </span>\n        </Fab>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ChatContainer);\n","export const USER_MESSAGE = 'USER_MESSAGE';\nexport const SERVER_MESSAGE = 'SERVER_MESSAGE';\nexport const SERVER_UPDATE_MESSAGES = 'SERVER_UPDATE_MESSAGES';\nexport const SERVER_UPDATE_USERS = 'SERVER_UPDATE_USERS';","import React, { useState } from 'react';\nimport { withStyles, Drawer, Grid, Typography, Divider, Hidden, Icon, IconButton, MenuItem, Fab } from '@material-ui/core';\nimport PeopleIcon from '@material-ui/icons/People';\nimport Arrow from '@material-ui/icons/ArrowBack';\nimport classNames from 'classnames';\n\nconst styles = theme => ({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: 240,\n      flexShrink: 0,\n      overflowY: 'auto'\n    }\n  },\n  fab: {\n    margin: theme.spacing.unit\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  drawerPaper: {\n    paddingTop: '4em',\n    width: 240,\n    top: 'inherit'\n  },\n  userBar: {\n    color: '#242424e6',\n    padding: '5px',\n    fontWeight: 'bold'\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nconst ParticipantsContainer = props => {\n  const { classes } = props;\n  const [mobile, setMobile] = useState({ mobileOpen: false });\n\n  const handleDrawerToggle = () => {\n    setMobile(mobile => ({ mobileOpen: !mobile.mobileOpen }));\n  };\n\n  const renderParticpants = users => {\n    return (\n      <Grid container>\n        <Grid item xs={12}>\n          <Typography style={{ color: '#212e53ed' }} align=\"center\" variant=\"h6\">\n            Users\n          </Typography>\n          <Typography style={{ color: users.length === 0 ? '#ebaca2' : '#4a919e' }} align=\"center\" variant=\"caption\">\n            {users.length} total\n          </Typography>\n          <Divider style={{ margin: '5px 0px 0px 0px' }} />\n        </Grid>\n        {users.map((user, index) => {\n          return (\n            <Grid key={index} item xs={12}>\n              <Typography\n                align=\"center\"\n                style={{ backgroundColor: index % 2 === 0 ? '#bed3c399' : 'rgba(74, 145, 158, 0.39)' }}\n                variant=\"caption\"\n                className={classes.userBar}\n              >\n                {user.id}\n              </Typography>\n            </Grid>\n          );\n        })}\n      </Grid>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <div>\n        <Fab color=\"secondary\" aria-label=\"People\" style={{\n          position: 'absolute',\n          transform: 'translateY(-50px)',\n          zIndex: '1250'}} onClick={handleDrawerToggle} className={classNames(classes.fab, classes.menuButton)}>\n          <PeopleIcon />\n        </Fab>\n      </div>\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          open={mobile.mobileOpen}\n          onClose={handleDrawerToggle}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div style={{\n            marginLeft: 'auto', marginRight: 'auto', marginBottom: '1em'}}>\n            <Fab color=\"primary\" aria-label=\"Back\" align=\"center\"  onClick={handleDrawerToggle} className={classNames(classes.fab, classes.menuButton)}>\n              <Arrow />\n            </Fab>\n          </div>\n          {renderParticpants(props.participants)}\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {renderParticpants(props.participants)}\n        </Drawer>\n      </Hidden>\n\n      {/* <Drawer variant=\"permanent\" className={classes.drawer} classes={{ paper: classes.drawerPaper }}>\n        <div className={classes.toolbar} />\n        {renderParticpants(props.participants)}\n      </Drawer> */}\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ParticipantsContainer);\n","import { CHANNEL_UK, CHANNEL_GLOBAL } from '../constants/channels';\nimport { USER_MESSAGE, SERVER_MESSAGE, SERVER_UPDATE_MESSAGES, SERVER_UPDATE_USERS } from '../constants/messageTypes';\nimport { ADD_GLOBAL_MESSAGE, ADD_UK_MESSAGE, SET_MESSAGE_HISTORY } from '../constants/messagesActions';\nimport { SET_USERS_LIST, SET_USER_ID } from '../constants/usersActions';\n\nexport default class MessageProcessor {\n  constructor(dispatch) {\n    this.dispatch = dispatch;\n  }\n\n  dispatch;\n\n  async execute(data) {\n    switch (data.type) {\n      case USER_MESSAGE:\n        await this.addMessageToStore(data);\n        break;\n      case SERVER_MESSAGE:\n        await this.addMessageToStore(data);\n        break;\n      case SERVER_UPDATE_MESSAGES:\n        await this.setMessageHistoryToStore(data);\n        break;\n      case SERVER_UPDATE_USERS:\n        await this.setUserListToStore(data);\n        break;\n      default:\n        break;\n    }\n  }\n\n  dispatchAction = async (type, payload) => {\n    await this.dispatch({\n      type: type,\n      payload: payload\n    });\n  };\n\n  addMessageToStore = async data => {\n    const messageObj = {\n      userId: data.userId,\n      sender: data.sender,\n      channel: data.channel,\n      recipient: data.recipient,\n      message: data.message,\n      timestamp: data.messageTime,\n      type: data.type\n    };\n\n    if (data.channel === CHANNEL_GLOBAL) {\n      await this.dispatchAction(ADD_GLOBAL_MESSAGE, messageObj);\n    }\n\n    if (data.channel === CHANNEL_UK) {\n      await this.dispatchAction(ADD_UK_MESSAGE, messageObj);\n    }\n  };\n\n  setMessageHistoryToStore = async data => {\n    const globalMessages = [];\n    const ukMessages = [];\n    const userId = data.recipient;\n\n    data.messageHistory.forEach(message => {\n      if (message.channel === CHANNEL_GLOBAL) {\n        globalMessages.push({\n          userId: message.userId,\n          sender: message.sender,\n          channel: message.channel,\n          recipient: message.recipient,\n          message: message.message,\n          timestamp: message.messageTime,\n          type: data.type\n        });\n      } else if (message.channel === CHANNEL_UK) {\n        ukMessages.push({\n          userId: message.userId,\n          sender: message.sender,\n          channel: message.channel,\n          recipient: message.recipient,\n          message: message.message,\n          timestamp: message.messageTime,\n          type: data.type\n        });\n      }\n    });\n\n    const payload = {\n      global: globalMessages,\n      uk: ukMessages\n    };\n\n    await this.dispatchAction(SET_MESSAGE_HISTORY, payload);\n    await this.dispatchAction(SET_USER_ID, userId);\n  };\n\n  setUserListToStore = async data => {\n    await this.dispatchAction(SET_USERS_LIST, data.participants);\n  };\n}\n","import React, { useEffect, useContext } from 'react';\nimport ChatContainer from '../components/ChatContainer';\nimport ParticipantsContainer from '../components/ParticipantsContainer';\nimport { Store } from '../store';\nimport { Sockets } from '../utils/socket';\nimport MessageProcessor from '../utils/messageProcessor';\n\nconst HomePage = () => {\n  const { state, dispatch } = useContext(Store);\n  const { sockets } = useContext(Sockets);\n  const processor = new MessageProcessor(dispatch);\n\n  useEffect(() => {\n    for (const socketInfo of sockets) {\n      socketInfo.socket.onopen = () => {\n        console.log('Succesfully connected to channel: ' + socketInfo.name);\n      };\n\n      socketInfo.socket.onerror = () => {\n        console.log('Uh oh... there was an error connected to the chat server');\n      };\n\n      socketInfo.socket.onmessage = async event => {\n        const data = JSON.parse(event.data);\n        await processor.execute(data);\n      };\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <ParticipantsContainer participants={state.users} />\n      <ChatContainer messages={state.messages} />\n    </React.Fragment>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport HomePage from '../pages/HomePage';\n\nexport default props => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n    </Switch>\n  </Router>\n);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\n\nconst rawTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#ebaca2',\n      main: '#ce6a6b',\n      dark: '#212e53'\n    },\n    secondary: {\n      light: '#bed3c3',\n      main: '#4a919e',\n      dark: '#212e53'\n    },\n    warning: {\n      main: '#ffc071',\n      dark: '#ffb25e'\n    },\n    error: {\n      xLight: red[50],\n      main: red[500],\n      dark: red[700]\n    },\n    success: {\n      xLight: green[50],\n      dark: green[700]\n    }\n  },\n  typography: {\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeightLight: 300, // Work Sans\n    fontWeightRegular: 400, // Work Sans\n    fontWeightMedium: 700, // Roboto Condensed\n    fontFamilySecondary: \"'Roboto Condensed', sans-serif\",\n    useNextVariants: true\n  }\n});\n\nconst fontHeader = {\n  color: rawTheme.palette.text.primary,\n  fontWeight: rawTheme.typography.fontWeightMedium,\n  fontFamily: rawTheme.typography.fontFamilySecondary,\n  textTransform: 'uppercase'\n};\n\nconst theme = {\n  ...rawTheme,\n  palette: {\n    ...rawTheme.palette,\n    background: {\n      ...rawTheme.palette.background,\n      default: '#ebaca217',\n      placeholder: grey[200]\n    }\n  },\n  typography: {\n    ...rawTheme.typography,\n    fontHeader,\n    h1: {\n      ...rawTheme.typography.h1,\n      ...fontHeader,\n      letterSpacing: 0,\n      fontSize: 60\n    },\n    h2: {\n      ...rawTheme.typography.h2,\n      ...fontHeader,\n      fontSize: 48\n    },\n    h3: {\n      ...rawTheme.typography.h3,\n      ...fontHeader,\n      fontSize: 42\n    },\n    h4: {\n      ...rawTheme.typography.h4,\n      ...fontHeader,\n      fontSize: 36\n    },\n    h5: {\n      ...rawTheme.typography.h5,\n      fontSize: 20,\n      fontWeight: rawTheme.typography.fontWeightLight\n    },\n    h6: {\n      ...rawTheme.typography.h6,\n      ...fontHeader,\n      fontSize: 18\n    },\n    subtitle1: {\n      ...rawTheme.typography.subtitle1,\n      fontSize: 18\n    },\n    body1: {\n      ...rawTheme.typography.body2,\n      fontWeight: rawTheme.typography.fontWeightRegular,\n      fontSize: 16\n    },\n    body2: {\n      ...rawTheme.typography.body1,\n      fontSize: 14\n    }\n  }\n};\n\nexport default theme;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport MuiAppBar from '@material-ui/core/AppBar';\nimport MuiToolbar from '@material-ui/core/Toolbar';\n\nconst styles = theme => ({\n  topLayer: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  title: {\n    fontSize: 24\n  },\n  toolbar: {\n    justifyContent: 'space-between'\n  },\n  left: {\n    flex: 1\n  },\n  leftLinkActive: {\n    color: theme.palette.common.white\n  },\n  right: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  rightLink: {\n    fontSize: 16,\n    color: theme.palette.common.white,\n    marginLeft: theme.spacing.unit * 3\n  },\n  linkSecondary: {\n    color: theme.palette.secondary.main\n  }\n});\n\nconst Navbar = props => {\n  const { classes } = props;\n\n  return (\n    <MuiAppBar position=\"static\" className={classes.topLayer}>\n      <MuiToolbar className={classNames(classes.toolbar, classes.topLayer)}>\n        <div className={classes.left} />\n        <Link variant=\"h6\" underline=\"none\" color=\"inherit\" className={classes.title} href=\"/\">\n          ChitChatter\n          <img style={{ height: '1.5em', paddingLeft: '0.5em' }} src={require('../assets/conversation.png')} />\n        </Link>\n        <div className={classes.right} />\n      </MuiToolbar>\n    </MuiAppBar>\n  );\n};\n\nexport default withStyles(styles)(Navbar);\n","import React from 'react';\nimport Routes from './components/Routes';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme/theme';\nimport Navbar from './components/Navbar';\nimport { StoreProvider } from './store';\nimport { SocketsProvider } from './utils/socket';\nimport './index.css';\nimport Card from '@material-ui/core/Card';\n\nconst App = () => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <StoreProvider>\n        <CssBaseline />\n\n        <header>\n          <Navbar />\n        </header>\n\n        <SocketsProvider>\n          <main>\n            <Routes />\n          </main>\n        </SocketsProvider>\n\n        <footer />\n        \n      </StoreProvider>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}